include "application"

play {
    server {
        pidfile.path = "/dev/null"
    }

    http.secret.key = "${APPLICATION_SECRET}"
}

lagom {

    spi {
        circuit-breaker-metrics-class = "cinnamon.lagom.CircuitBreakerInstrumentation"
    }

}

akka {
    discovery.method = akka-dns
}

cinnamon {

    application = "inventory"

    #chmetrics.reporters += "console-reporter"

    #prometheus {
    #    exporters += http-server

    #    http-server {
    #        host = "0.0.0.0"
    #        port = 9001
    #    }
    #}

    chmetrics {

        reporters += "datadog-reporter"

        #datadog-reporter {
        #    channel = unix-domain-socket
        #    unix-domain-socket {
        #        path = /var/run/datadog/dsd.socket
        #    }
        #}

        datadog-reporter {
            host = ${DD_AGENT_HOST}
            dogstatsd {
                enabled = on
                prefix = "lightbend"
            }
            report {
                histogram = ["min", "max", "p98", "p99", "p999"]
            }
        }
    }

    akka.actors {
        "/user" {
            report-by = instance
            traceable = on
        }
        "/user/*" {
            report-by = instance
            traceable = on
        }
    }

    opentracing {

        auto-trace = on

        datadog {
            agent.host = ${DD_AGENT_HOST}
            trace.agent.port = 8126
        }

        alpakka.kafka {
            consumer-spans = on
            producer-spans = on
        }

        span.tags {
            environment = "gsa"
        }

    }


    lagom.http {
        servers {
            "*:*" {
                paths {
                    "*" {
                        metrics = on
                        traceable = on
                    }
                }
            }
        }
        clients {
            "*:*" {
                paths {
                    "*" {
                        metrics = on
                        traceable = on
                    }
                }
            }
        }
    }

}